@using HMS.Models;
@model TaskFilters

@{
    ViewBag.HistoryTaskTab =  ViewData.Model.Dictionary["%HistoryTask_Tab"];
    ViewBag.ActiveTaskTab =  ViewData.Model.Dictionary["%ActiveTask_Tab"];
    //local variables
    var Responsible = "";
    var Patient = "";
    var PatientHistory = "";
    var ResponsibleHistory = "";
    var selected = "";
    var histtab="";
    var activetab="";
}
@section Scripts {

    <script type="text/javascript">
        $('#datepicker-from-active').datepicker();
        $('#datepicker-from-active').datepicker();
        $('#datepicker-till-active').datepicker();
        $('#datepicker-from-history').datepicker();
        $('#datepicker-till-history').datepicker();
    </script>
}

<br />
<br />
<ul class="nav nav-tabs">
    @if (ViewBag.HistoryTab != null && ViewBag.HistoryTab) { histtab = "active";activetab="";} else { histtab = "";activetab="active";} 
    <li class="@activetab"><a href="#tabs-actual" data-toggle="tab"><b>@ViewBag.ActiveTaskTab</b></a></li>
    @if (User.IsInRole("Doctor"))
    {   
        <li class="@histtab"><a href="#tabs-history" data-toggle="tab"><b>@ViewBag.HistoryTaskTab</b></a></li>  
    }
</ul>
<br />
<br />
<div class="tab-content">
@if (User.IsInRole("Doctor"))
{
    <div class="tab-pane @histtab" id="tabs-history">
    @using (Html.BeginForm("HistorySortFilter", "Filters", FormMethod.Get))
    {   
        <fieldset class="filtering">
            <legend>View Patient History</legend>
            <div class="row">
                <div class="col-md-offset-1">
                    <label>Patient: </label>
                    <select  name="HistoryPatient" data-val="true" data-val-number="The field Priority must be a number." data-val-required="The Priority field is required.">
                        <option value="">Any</option>
                        @foreach (SelectListItem pt in ViewData.Model.AllPatients)
                        {
                            if (ViewBag.HistoryPatient != null && ViewBag.HistoryPatient == pt.Value) { selected = "selected"; } else { selected = ""; }
                            <option value="@pt.Value" @selected>@pt.Text</option>
                        }
                    </select>
                    <label>Date From: </label>
                    @Html.TextBoxFor(model => model.HistoryFrom, new {@Value=ViewBag.From, @id="datepicker-from-history", data_date_format = "mm/dd/yy" })
                    <label>Date Till: </label>
                    @Html.TextBoxFor(model => model.HistoryTill, new {@Value=ViewBag.Till, @id = "datepicker-till-history",  data_date_format = "mm/dd/yy"})
                    <button type="submit" class="btn" style="text-align:center"><b>View</b></button>
                </div>
            </div>
        </fieldset>
        <br />
        if(@ViewBag.Error == null)
        {
            <table class="table">
                <thead>
                    <tr>
                        <th>@{ Html.RenderPartial("HistorySorting", Model,new ViewDataDictionary { { "ColumnName", "Priority" }, { "DisplayName", @ViewData.Model.Dictionary["%ViewTasks_Table_Priority"] } });} </th>
                        <th>@{ Html.RenderPartial("HistorySorting", Model,new ViewDataDictionary { { "ColumnName", "Title" }, { "DisplayName", @ViewData.Model.Dictionary["%ViewTasks_Table_Title"] } });}</th>
                        <th>@{ Html.RenderPartial("HistorySorting", Model,new ViewDataDictionary { { "ColumnName", "Instructions" }, { "DisplayName", @ViewData.Model.Dictionary["%ViewTasks_Table_Instructions"] } });} </th>
                        <th>@{ Html.RenderPartial("HistorySorting", Model,new ViewDataDictionary { { "ColumnName", "Status" }, { "DisplayName", @ViewData.Model.Dictionary["%ViewTasks_Table_Status"] } });}</th>
                        <th>@{ Html.RenderPartial("HistorySorting", Model,new ViewDataDictionary { { "ColumnName", "Responsible_Name" }, { "DisplayName", @ViewData.Model.Dictionary["%ViewTasks_Table_Responsible"] } });} </th>
                        <th>@{ Html.RenderPartial("HistorySorting", Model,new ViewDataDictionary { { "ColumnName", "TimeCreated" }, { "DisplayName", @ViewData.Model.Dictionary["%ViewTasks_Table_Created"] } });}</th>
                        <th>@{ Html.RenderPartial("HistorySorting", Model,new ViewDataDictionary { { "ColumnName", "TimeUpdated" }, { "DisplayName", @ViewData.Model.Dictionary["%ViewTasks_Table_LstUpdated"] } });}</th>
                    </tr>
                </thead>
                <tbody>
                    @if(ViewData.Model.HistoryTasks != null)
                    {
                        foreach (var Task in ViewData.Model.HistoryTasks)
                        {
                            if(Task.Responsible_Surname != null){ResponsibleHistory = Task.Responsible_Surname + " " + Task.Responsible_Name + " (" + Task.Responsible_Department + ")";} else {ResponsibleHistory="None";}
                        
                            PatientHistory = Task.Patient_Surname + " " + Task.Patient_Name + " (" + Task.Patient_Department + ")";
                            <tr data-id="@Task.ID">
                                <td >@Task.Priority</td>
                                <td ><b>@Task.Title</b><br /><small>@PatientHistory</small></td>
                                <td >@Task.Instructions</td>
                                <td >@Task.Status</td>
                                <td >@ResponsibleHistory</td>
                                <td >@Task.TimeCreated</td>
                                <td >@Task.TimeUpdated </td>
                            </tr>
                        }
                    }
                    <tr>
                        <td class="pager" colspan="5">
                            @{ Html.RenderPartial("Pager", Model); }
                        </td>
                    </tr>
           
                </tbody>
            </table>
        }
        else
        {
            <p style="color:red;"><b>@ViewBag.Error</b></p>
        }
    }
    </div>
}
    <div class="tab-pane @activetab" id="tabs-actual">
    @using (Html.BeginForm("ActiveSortFilter", "Filters", FormMethod.Get))
    {       
        <fieldset class="filtering">
            <legend>View Active Tasks</legend>
            <div class="row">
                <div class="col-md-offset-1">
                    <label>Priority: </label>
                    <select  name="Importance" data-val="true" data-val-number="The field Priority must be a number." data-val-required="The Priority field is required.">
                        <option value="">Any</option>
                        @foreach (SelectListItem pt in ViewData.Model.PriorityTypes)
                        {
                            if (ViewBag.Importance != null && ViewBag.Importance == pt.Value) { selected = "selected"; } else { selected = ""; }
                            <option value="@pt.Value" @selected>@pt.Text</option>
                        }
                    </select>
                    <label>Status: </label>
                    <select name="Status" data-val="true" data-val-number="The field Priority must be a number." data-val-required="The Priority field is required.">
                        <option value="">Any</option>
                        @foreach (SelectListItem pt in ViewData.Model.StatusTypes)
                        {
                            if (ViewBag.Status != null && ViewBag.Status == pt.Value) { selected = "selected"; } else { selected = ""; }
                            <option value="@pt.Value" @selected>@pt.Text</option>
                        }
                    </select> 
                    <label>Task Type: </label>
                    <select name="TaskType" data-val="true" data-val-number="The field Priority must be a number." data-val-required="The Priority field is required.">
                        <option value="">Any</option>
                        @foreach (TaskFilters.FilteredTaskType pt in ViewData.Model.TaskTypes)
                        {
                            if (ViewBag.TaskType != null && ViewBag.TaskType == pt.id) { selected = "selected"; } else { selected = ""; }
                            <option value="@pt.id" @selected>@pt.Text</option>
                        }
                    </select> 
                    <label>Patient: </label>
                    <select  name="Patient" data-val="true" data-val-number="The field Priority must be a number." data-val-required="The Priority field is required.">
                        <option value="">Any</option>
                        @foreach (SelectListItem pt in ViewData.Model.Patients)
                        {
                            if (ViewBag.Patient != null && ViewBag.Patient == pt.Value) { selected = "selected"; } else { selected = ""; }
                            <option value="@pt.Value" @selected>@pt.Text</option>
                        }
                    </select>
                </div>
            </div> 
            <div class="row">
                <div class="col-md-offset-1">
                    <label>Responsible: </label>
                    <select name="Responsible" data-val="true" data-val-number="The field Priority must be a number." data-val-required="The Priority field is required.">
                        <option value="">Any</option>
                        @foreach (SelectListItem pt in ViewData.Model.Responsibles)
                        {
                            if (ViewBag.Responsible != null && ViewBag.Responsible == pt.Value) { selected = "selected"; } else { selected = ""; }
                            <option value="@pt.Value" @selected>@pt.Text</option>
                        }
                    </select>   
                    <label>Date From: </label>
                    @Html.TextBoxFor(model => model.From, new { @Value=ViewBag.From, @id="datepicker-from-active", data_date_format = "mm/dd/yy" })
                    <label>Date Till: </label>
                    @Html.TextBoxFor(model => model.Till, new {  @Value=ViewBag.Till, @id = "datepicker-till-active",  data_date_format = "mm/dd/yy"})
                </div>
            </div>
        </fieldset>
        <br />
        <div class="row">
            <div class="col-md-5 col-md-offset-5"><button type="submit" class="btn" style="text-align:center"><b>View</b></button></div>
        </div>          

        if(@ViewBag.Error == null)
        {
            <br />
            <table class="table">
                <thead>
                    <tr>
                        <th>@{ Html.RenderPartial("ActiveSorting", Model,new ViewDataDictionary { { "ColumnName", "Priority" }, { "DisplayName", @ViewData.Model.Dictionary["%ViewTasks_Table_Priority"] } });} </th>
                        <th>@{ Html.RenderPartial("ActiveSorting", Model,new ViewDataDictionary { { "ColumnName", "Title" }, { "DisplayName", @ViewData.Model.Dictionary["%ViewTasks_Table_Title"] } });}</th>
                        <th>@{ Html.RenderPartial("ActiveSorting", Model,new ViewDataDictionary { { "ColumnName", "Instructions" }, { "DisplayName", @ViewData.Model.Dictionary["%ViewTasks_Table_Instructions"] } });} </th>
                        <th>@{ Html.RenderPartial("ActiveSorting", Model,new ViewDataDictionary { { "ColumnName", "Status" }, { "DisplayName", @ViewData.Model.Dictionary["%ViewTasks_Table_Status"] } });}</th>
                        <th>@{ Html.RenderPartial("ActiveSorting", Model,new ViewDataDictionary { { "ColumnName", "Responsible_Name" }, { "DisplayName", @ViewData.Model.Dictionary["%ViewTasks_Table_Responsible"] } });} </th>
                        <th>@{ Html.RenderPartial("ActiveSorting", Model,new ViewDataDictionary { { "ColumnName", "TimeCreated" }, { "DisplayName", @ViewData.Model.Dictionary["%ViewTasks_Table_Created"] } });}</th>
                        <th>@{ Html.RenderPartial("ActiveSorting", Model,new ViewDataDictionary { { "ColumnName", "TimeUpdated" }, { "DisplayName", @ViewData.Model.Dictionary["%ViewTasks_Table_LstUpdated"] } });}</th>
                    </tr>
                </thead>
                <tbody>
                    @if(ViewData.Model.Tasks != null)
                    {
                        foreach (var Task in ViewData.Model.Tasks)
                        {
                            if(Task.Responsible_Surname != null){Responsible = Task.Responsible_Surname + " " + Task.Responsible_Name + " (" + Task.Responsible_Department + ")";} else {Responsible="None";}
                            Patient = Task.Patient_Surname + " " + Task.Patient_Name + " (" + Task.Patient_Department + ")";
                            <tr data-id="@Task.ID">
                                <td >@Task.Priority</td>
                                <td ><b>@Task.Title</b><br /><small>@Patient</small></td>
                                <td >@Task.Instructions</td>
                                <td >@Task.Status</td>
                                <td >@Responsible</td>
                                <td >@Task.TimeCreated</td>
                                <td >@Task.TimeUpdated </td>
                            </tr>
                        }
                        <tr>
                            <td class="pager" colspan="5">
                                @{ Html.RenderPartial("Pager", Model); }
                            </td>
                        </tr>
                    }

                </tbody>
            </table>
        }
        else
        {
            <p style="color:red;"><b>@ViewBag.Error</b></p>
        }
  }
    </div>
</div>


//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HMS.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class DBDataContext : DbContext
    {
        public DBDataContext()
            : base("name=DBDataContext")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        [DbFunction("DBDataContext", "F_Dictionary")]
        public virtual IQueryable<F_Dictionary_Result> F_Dictionary(string language)
        {
            var languageParameter = language != null ?
                new ObjectParameter("Language", language) :
                new ObjectParameter("Language", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<F_Dictionary_Result>("[DBDataContext].[F_Dictionary](@Language)", languageParameter);
        }
    
        [DbFunction("DBDataContext", "F_NotificationTypes")]
        public virtual IQueryable<F_NotificationTypes_Result> F_NotificationTypes(string language)
        {
            var languageParameter = language != null ?
                new ObjectParameter("Language", language) :
                new ObjectParameter("Language", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<F_NotificationTypes_Result>("[DBDataContext].[F_NotificationTypes](@Language)", languageParameter);
        }
    
        [DbFunction("DBDataContext", "F_Patients")]
        public virtual IQueryable<F_Patients_Result> F_Patients()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<F_Patients_Result>("[DBDataContext].[F_Patients]()");
        }
    
        [DbFunction("DBDataContext", "F_PriorityTypes")]
        public virtual IQueryable<F_PriorityTypes_Result> F_PriorityTypes(string language)
        {
            var languageParameter = language != null ?
                new ObjectParameter("Language", language) :
                new ObjectParameter("Language", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<F_PriorityTypes_Result>("[DBDataContext].[F_PriorityTypes](@Language)", languageParameter);
        }
    
        [DbFunction("DBDataContext", "F_TaskTypes")]
        public virtual IQueryable<F_TaskTypes_Result> F_TaskTypes(string language)
        {
            var languageParameter = language != null ?
                new ObjectParameter("Language", language) :
                new ObjectParameter("Language", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<F_TaskTypes_Result>("[DBDataContext].[F_TaskTypes](@Language)", languageParameter);
        }
    
        public virtual int SP_Tasks_Add(Nullable<int> typeID, Nullable<int> patientID, Nullable<int> priorityID, string instr, Nullable<int> creator_ID, ObjectParameter newTaskID)
        {
            var typeIDParameter = typeID.HasValue ?
                new ObjectParameter("TypeID", typeID) :
                new ObjectParameter("TypeID", typeof(int));
    
            var patientIDParameter = patientID.HasValue ?
                new ObjectParameter("PatientID", patientID) :
                new ObjectParameter("PatientID", typeof(int));
    
            var priorityIDParameter = priorityID.HasValue ?
                new ObjectParameter("PriorityID", priorityID) :
                new ObjectParameter("PriorityID", typeof(int));
    
            var instrParameter = instr != null ?
                new ObjectParameter("Instr", instr) :
                new ObjectParameter("Instr", typeof(string));
    
            var creator_IDParameter = creator_ID.HasValue ?
                new ObjectParameter("Creator_ID", creator_ID) :
                new ObjectParameter("Creator_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Tasks_Add", typeIDParameter, patientIDParameter, priorityIDParameter, instrParameter, creator_IDParameter, newTaskID);
        }
    }
}
